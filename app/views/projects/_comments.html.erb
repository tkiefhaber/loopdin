<div class='row'>
  <div class='col-sm-12'>
    <div class='box'>
      <div class='row todo-list'>
        <div class='col-sm-10'>
          <div class='box'>
            <div class='box-content box-no-padding'>
              <ul class='list-unstyled ' data-sortable-axis='y' data-sortable-connect='.sortable'>
                <% version.comments.each do |comment| %>
                  <li class="<%= comment_classes(comment) %>" id="<%= comment.id %>">
                    <label class='check pull-left todo'>
                      <input type='checkbox' id="<%= comment.id %>-addressed" <%= comment.addressed ? 'checked' : '' %>>
                      <span>Comment Time: <%= comment.start_time %>: <%= comment.text %><br/>~ <%= User.find(comment.user_id).username %></span>
                    </label>
                    <div class='actions pull-right'>
                      <a class='btn btn-link remove has-tooltip' data-placement='top' href='#' title='Remove todo' id="<%= comment.id %>-delete">
                        <i class='icon-remove'></i>
                      </a>
                      <a class='btn btn-link important has-tooltip' data-placement='top' href='#' title='Mark as important' id="<%= comment.id %>-important">
                        <i class='icon-bookmark-empty'></i>
                      </a>
                    </div>
                  </li>
                <% end %>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script>
  $.ajaxSetup({
    headers: {
      'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
    }
  });

  $(".todo-list .new-todo").live('submit', function(e) {
    var li, todo_name;
    todo_name = $(this).find("#todo_name").val();
    $(this).find("#todo_name").val("");
    if (todo_name.length !== 0) {
      li = $(this).parents(".todo-list").find("li.item").first().clone();
      li.find("input[type='checkbox']").attr("checked", false);
      li.removeClass("important").removeClass("done");
      li.find("label.todo span").text(todo_name);
      $(".todo-list ul").first().prepend(li);
      li.effect("highlight", {}, 500);
    }
    return e.preventDefault();
  });

  $(".todo-list .actions .remove").live("click", function(e) {
    $(this).tooltip("hide");
    $(this).parents("li").fadeOut(500, function() {
      return $(this).remove();
    });
    $.ajax({
      url: "/users/<%= @project.user.id %>/projects/<%= @project.id %>/versions/<%= version.id %>/comments/" + parseInt(this.id),
      type: "post",
      dataType: "json",
      data: {"_method":"delete"}
    });
    e.stopPropagation();
    e.preventDefault();
    return false;
  });

  $(".todo-list .actions .important").live("click", function(e) {
    $(this).parents("li").toggleClass("important");
    $.ajax({
      url: "/users/<%= @project.user.id %>/projects/<%= @project.id %>/versions/<%= version.id %>/comments/" + parseInt(this.id) + "?important=" + $(this).parents('li').hasClass('important'),
      type: "put",
      dataType: "json"
    });
    e.stopPropagation();
    e.preventDefault();
    return false;
  });

  $(".todo-list .check").live("click", function() {
    var checkbox;
    checkbox = $(this).find("input[type='checkbox']");
    $.ajax({
      url: "/users/<%= @project.user.id %>/projects/<%= @project.id %>/versions/<%= version.id %>/comments/" + parseInt(checkbox.attr('id')) + "?addressed=" + checkbox.is(":checked"),
      type: "put",
      dataType: "json"
    });
    if (checkbox.is(":checked")) {
      return $(this).parents("li").addClass("done");
    } else {
      return $(this).parents("li").removeClass("done");
    }
  });
</script>
